import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Header } from "@/components/layout/header";
import { Sidebar } from "@/components/layout/sidebar";
import { ThemeProvider } from "@/components/layout/theme-provider";
import { CalculatorThemeProvider } from "@/components/layout/calculator-theme-provider";
import dynamic from "next/dynamic";

// Dynamically import the performance indicator to avoid SSR issues
const PerformanceIndicator = dynamic(
  () => import('@/components/ui/performance-indicator').then(mod => mod.PerformanceIndicator)
);

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} min-h-screen bg-background font-sans antialiased`}
      >
        {/* Skip to content link for keyboard users */}
        <a 
          href="#main-content" 
          className="sr-only focus:not-sr-only focus:absolute focus:z-[100] focus:p-2 focus:bg-background focus:text-primary focus:outline-ring"
        >
          Skip to content
        </a>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <CalculatorThemeProvider>            <div className="relative flex min-h-screen flex-col">
              <Header />
              <div className="flex-1 flex">
                <Sidebar />
                <main id="main-content" className="flex-1" tabIndex={-1}>{children}</main>
              </div>
              {/* Only show in development */}
              {process.env.NODE_ENV === 'development' && <PerformanceIndicator />}
            </div>
          </CalculatorThemeProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
